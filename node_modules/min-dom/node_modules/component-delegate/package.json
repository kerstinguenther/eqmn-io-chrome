{
  "name": "component-delegate",
  "description": "Event delegation component",
  "version": "0.2.3",
  "keywords": [
    "event",
    "events",
    "delegate",
    "delegation"
  ],
  "dependencies": {
    "component-closest": "*",
    "component-event": "*"
  },
  "browser": {
    "closest": "component-closest",
    "event": "component-event"
  },
  "component": {
    "scripts": {
      "delegate/index.js": "index.js"
    }
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/component/delegate.git"
  },
  "readme": "\n# delegate\n\n  Low-level event delegation component.\n\n## Installation\n\n    $ component install component/delegate\n\n## Example\n\n```js\nvar delegate = require('delegate');\nvar ul = document.querySelector('ul');\nvar n = 0;\n\nvar fn = delegate.bind(ul, 'li a', 'click', function(e){\n  console.log(e.target);\n  console.log(e.delegateTarget); // => \"<a>\"\n  if (++n == 3) {\n    console.log('unbind');\n    delegate.unbind(ul, 'click', fn, false);\n  }\n}, false);\n```\n\n## API\n\n### .bind(el, selector, type, callback, [capture])\n\n  Bind and return a callback which may be passed to `.unbind()`.\n\n### .unbind(el, type, callback, [capture])\n\n  Unbind.\n\n## License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/component/delegate/issues"
  },
  "_id": "component-delegate@0.2.3",
  "_from": "component-delegate@^0.2.3"
}
